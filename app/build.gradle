plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'

android {
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    compileSdkVersion 29

    defaultConfig {
        applicationId "com.davinder.betworks"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.davinder.betworks.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"



    implementation "androidx.navigation:navigation-compose:$compose_version"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    implementation "androidx.legacy:legacy-support-v4:$ax_legacysupport_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$livedata_version"

    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$ax_appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    testImplementation "junit:junit:$java_junit_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    // hilt dependencies
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Rx Java
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // Retrofit
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava_adapter_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit_adapter_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"

    // MockK
    testImplementation "io.mockk:mockk:$mockk_version"
    androidTestImplementation "io.mockk:mockk:$mockk_version"

    testImplementation "androidx.arch.core:core-testing:$core_testing_version"

    debugImplementation("androidx.fragment:fragment-testing:$fragment_version") {
        exclude group: 'androidx.test', module: 'monitor'
    }
    debugImplementation("androidx.fragment:fragment-ktx:$fragment_version")

    androidTestImplementation("com.android.support.test.espresso:espresso-contrib:$espresso_contrib_version") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_idling_version"

    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
}

kapt {
    correctErrorTypes true
}

hilt {
    enableTransformForLocalTests = true
}